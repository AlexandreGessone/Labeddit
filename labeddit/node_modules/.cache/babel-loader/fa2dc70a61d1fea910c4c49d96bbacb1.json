{"ast":null,"code":"import axios from \"axios\";\nconst baseUrl = \"https://us-central1-labenu-apis.cloudfunctions.net/labEddit\";\nexport const signup = async body => {\n  try {\n    const response = await axios.post(`${baseUrl}/signup`, body);\n    return response.data;\n  } catch (error) {\n    return error.response.data;\n  }\n};\nexport const login = async body => {\n  try {\n    const response = await axios.post(`${baseUrl}/login`, body);\n    return response.data;\n  } catch (error) {\n    return error.response.data;\n  }\n};\nexport const createPost = async body => {\n  const axiosConfig = {\n    headers: {\n      Authorization: JSON.parse(localStorage.getItem(\"labeddit\")).token\n    }\n  };\n\n  try {\n    const response = await axios.post(`${baseUrl}/posts`, body, axiosConfig);\n    return response.data.success;\n  } catch (error) {\n    console.log(error);\n    return false;\n  }\n};\nexport const createComment = async (postId, body) => {\n  const axiosConfig = {\n    headers: {\n      Authorization: JSON.parse(localStorage.getItem(\"labeddit\")).token\n    }\n  };\n\n  try {\n    const response = await axios.post(`${baseUrl}/posts/${postId}/comment`, body, axiosConfig);\n    return response.data.success;\n  } catch (error) {\n    console.log(error);\n    return false;\n  }\n};\nexport const votePost = async (postId, direction) => {\n  const axiosConfig = {\n    headers: {\n      Authorization: JSON.parse(localStorage.getItem(\"labeddit\")).token\n    }\n  };\n\n  try {\n    const response = await axios.put(`${baseUrl}/posts/${postId}/vote`, {\n      direction: direction\n    }, axiosConfig);\n    return response.data.success;\n  } catch (error) {\n    console.log(error.response);\n    return false;\n  }\n};\nexport const voteComment = async (postId, commentId, direction) => {\n  const axiosConfig = {\n    headers: {\n      Authorization: JSON.parse(localStorage.getItem(\"labeddit\")).token\n    }\n  };\n\n  try {\n    const response = await axios.put(`${baseUrl}/posts/${postId}/comment/${commentId}/vote`, {\n      direction: direction\n    }, axiosConfig);\n    return response.data.success;\n  } catch (error) {\n    console.log(error.response);\n    return false;\n  }\n};\nexport const getPosts = async () => {\n  const axiosConfig = {\n    headers: {\n      Authorization: JSON.parse(localStorage.getItem(\"labeddit\")).token\n    }\n  };\n\n  try {\n    const response = await axios.get(`${baseUrl}/posts`, axiosConfig);\n    return response.data.posts;\n  } catch (error) {\n    console.log(error.response);\n  }\n};\nexport const getPostDetail = async postId => {\n  const axiosConfig = {\n    headers: {\n      Authorization: JSON.parse(localStorage.getItem(\"labeddit\")).token\n    }\n  };\n\n  try {\n    const response = await axios.get(`${baseUrl}/posts/${postId}`, axiosConfig);\n    return response.data.post;\n  } catch (error) {\n    console.log(error.response);\n  }\n};","map":{"version":3,"sources":["/Users/alexandregessone/Desktop/labeddit/mello-4eddit9/labeddit/src/functions/axios.js"],"names":["axios","baseUrl","signup","body","response","post","data","error","login","createPost","axiosConfig","headers","Authorization","JSON","parse","localStorage","getItem","token","success","console","log","createComment","postId","votePost","direction","put","voteComment","commentId","getPosts","get","posts","getPostDetail"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,OAAO,GAAG,6DAAhB;AAEA,OAAO,MAAMC,MAAM,GAAG,MAAOC,IAAP,IAAgB;AACpC,MAAI;AACF,UAAMC,QAAQ,GAAG,MAAMJ,KAAK,CAACK,IAAN,CAAY,GAAEJ,OAAQ,SAAtB,EAAgCE,IAAhC,CAAvB;AACA,WAAOC,QAAQ,CAACE,IAAhB;AACD,GAHD,CAGE,OAAOC,KAAP,EAAc;AACd,WAAOA,KAAK,CAACH,QAAN,CAAeE,IAAtB;AACD;AACF,CAPM;AASP,OAAO,MAAME,KAAK,GAAG,MAAOL,IAAP,IAAgB;AACnC,MAAI;AACF,UAAMC,QAAQ,GAAG,MAAMJ,KAAK,CAACK,IAAN,CAAY,GAAEJ,OAAQ,QAAtB,EAA+BE,IAA/B,CAAvB;AACA,WAAOC,QAAQ,CAACE,IAAhB;AACD,GAHD,CAGE,OAAOC,KAAP,EAAc;AACd,WAAOA,KAAK,CAACH,QAAN,CAAeE,IAAtB;AACD;AACF,CAPM;AASP,OAAO,MAAMG,UAAU,GAAG,MAAON,IAAP,IAAgB;AACxC,QAAMO,WAAW,GAAG;AAClBC,IAAAA,OAAO,EAAE;AACPC,MAAAA,aAAa,EAAEC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,EAA6CC;AADrD;AADS,GAApB;;AAKA,MAAI;AACF,UAAMb,QAAQ,GAAG,MAAMJ,KAAK,CAACK,IAAN,CAAY,GAAEJ,OAAQ,QAAtB,EAA+BE,IAA/B,EAAqCO,WAArC,CAAvB;AACA,WAAON,QAAQ,CAACE,IAAT,CAAcY,OAArB;AACD,GAHD,CAGE,OAAOX,KAAP,EAAc;AACdY,IAAAA,OAAO,CAACC,GAAR,CAAYb,KAAZ;AACA,WAAO,KAAP;AACD;AACF,CAbM;AAeP,OAAO,MAAMc,aAAa,GAAG,OAAOC,MAAP,EAAenB,IAAf,KAAwB;AACnD,QAAMO,WAAW,GAAG;AAClBC,IAAAA,OAAO,EAAE;AACPC,MAAAA,aAAa,EAAEC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,EAA6CC;AADrD;AADS,GAApB;;AAKA,MAAI;AACF,UAAMb,QAAQ,GAAG,MAAMJ,KAAK,CAACK,IAAN,CACpB,GAAEJ,OAAQ,UAASqB,MAAO,UADN,EAErBnB,IAFqB,EAGrBO,WAHqB,CAAvB;AAKA,WAAON,QAAQ,CAACE,IAAT,CAAcY,OAArB;AACD,GAPD,CAOE,OAAOX,KAAP,EAAc;AACdY,IAAAA,OAAO,CAACC,GAAR,CAAYb,KAAZ;AACA,WAAO,KAAP;AACD;AACF,CAjBM;AAmBP,OAAO,MAAMgB,QAAQ,GAAG,OAAOD,MAAP,EAAeE,SAAf,KAA6B;AACnD,QAAMd,WAAW,GAAG;AAClBC,IAAAA,OAAO,EAAE;AACPC,MAAAA,aAAa,EAAEC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,EAA6CC;AADrD;AADS,GAApB;;AAKA,MAAI;AACF,UAAMb,QAAQ,GAAG,MAAMJ,KAAK,CAACyB,GAAN,CACpB,GAAExB,OAAQ,UAASqB,MAAO,OADN,EAErB;AAAEE,MAAAA,SAAS,EAAEA;AAAb,KAFqB,EAGrBd,WAHqB,CAAvB;AAKA,WAAON,QAAQ,CAACE,IAAT,CAAcY,OAArB;AACD,GAPD,CAOE,OAAOX,KAAP,EAAc;AACdY,IAAAA,OAAO,CAACC,GAAR,CAAYb,KAAK,CAACH,QAAlB;AACA,WAAO,KAAP;AACD;AACF,CAjBM;AAmBP,OAAO,MAAMsB,WAAW,GAAG,OAAOJ,MAAP,EAAeK,SAAf,EAA0BH,SAA1B,KAAwC;AACjE,QAAMd,WAAW,GAAG;AAClBC,IAAAA,OAAO,EAAE;AACPC,MAAAA,aAAa,EAAEC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,EAA6CC;AADrD;AADS,GAApB;;AAKA,MAAI;AACF,UAAMb,QAAQ,GAAG,MAAMJ,KAAK,CAACyB,GAAN,CACpB,GAAExB,OAAQ,UAASqB,MAAO,YAAWK,SAAU,OAD3B,EAErB;AAAEH,MAAAA,SAAS,EAAEA;AAAb,KAFqB,EAGrBd,WAHqB,CAAvB;AAKA,WAAON,QAAQ,CAACE,IAAT,CAAcY,OAArB;AACD,GAPD,CAOE,OAAOX,KAAP,EAAc;AACdY,IAAAA,OAAO,CAACC,GAAR,CAAYb,KAAK,CAACH,QAAlB;AACA,WAAO,KAAP;AACD;AACF,CAjBM;AAmBP,OAAO,MAAMwB,QAAQ,GAAG,YAAY;AAClC,QAAMlB,WAAW,GAAG;AAClBC,IAAAA,OAAO,EAAE;AACPC,MAAAA,aAAa,EAAEC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,EAA6CC;AADrD;AADS,GAApB;;AAKA,MAAI;AACF,UAAMb,QAAQ,GAAG,MAAMJ,KAAK,CAAC6B,GAAN,CAAW,GAAE5B,OAAQ,QAArB,EAA8BS,WAA9B,CAAvB;AACA,WAAON,QAAQ,CAACE,IAAT,CAAcwB,KAArB;AACD,GAHD,CAGE,OAAOvB,KAAP,EAAc;AACdY,IAAAA,OAAO,CAACC,GAAR,CAAYb,KAAK,CAACH,QAAlB;AACD;AACF,CAZM;AAcP,OAAO,MAAM2B,aAAa,GAAG,MAAOT,MAAP,IAAkB;AAC7C,QAAMZ,WAAW,GAAG;AAClBC,IAAAA,OAAO,EAAE;AACPC,MAAAA,aAAa,EAAEC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,EAA6CC;AADrD;AADS,GAApB;;AAKA,MAAI;AACF,UAAMb,QAAQ,GAAG,MAAMJ,KAAK,CAAC6B,GAAN,CAAW,GAAE5B,OAAQ,UAASqB,MAAO,EAArC,EAAwCZ,WAAxC,CAAvB;AACA,WAAON,QAAQ,CAACE,IAAT,CAAcD,IAArB;AACD,GAHD,CAGE,OAAOE,KAAP,EAAc;AACdY,IAAAA,OAAO,CAACC,GAAR,CAAYb,KAAK,CAACH,QAAlB;AACD;AACF,CAZM","sourcesContent":["import axios from \"axios\";\n\nconst baseUrl = \"https://us-central1-labenu-apis.cloudfunctions.net/labEddit\";\n\nexport const signup = async (body) => {\n  try {\n    const response = await axios.post(`${baseUrl}/signup`, body);\n    return response.data;\n  } catch (error) {\n    return error.response.data;\n  }\n};\n\nexport const login = async (body) => {\n  try {\n    const response = await axios.post(`${baseUrl}/login`, body);\n    return response.data;\n  } catch (error) {\n    return error.response.data;\n  }\n};\n\nexport const createPost = async (body) => {\n  const axiosConfig = {\n    headers: {\n      Authorization: JSON.parse(localStorage.getItem(\"labeddit\")).token,\n    },\n  };\n  try {\n    const response = await axios.post(`${baseUrl}/posts`, body, axiosConfig);\n    return response.data.success;\n  } catch (error) {\n    console.log(error);\n    return false;\n  }\n};\n\nexport const createComment = async (postId, body) => {\n  const axiosConfig = {\n    headers: {\n      Authorization: JSON.parse(localStorage.getItem(\"labeddit\")).token,\n    },\n  };\n  try {\n    const response = await axios.post(\n      `${baseUrl}/posts/${postId}/comment`,\n      body,\n      axiosConfig\n    );\n    return response.data.success;\n  } catch (error) {\n    console.log(error);\n    return false;\n  }\n};\n\nexport const votePost = async (postId, direction) => {\n  const axiosConfig = {\n    headers: {\n      Authorization: JSON.parse(localStorage.getItem(\"labeddit\")).token,\n    },\n  };\n  try {\n    const response = await axios.put(\n      `${baseUrl}/posts/${postId}/vote`,\n      { direction: direction },\n      axiosConfig\n    );\n    return response.data.success;\n  } catch (error) {\n    console.log(error.response);\n    return false;\n  }\n};\n\nexport const voteComment = async (postId, commentId, direction) => {\n  const axiosConfig = {\n    headers: {\n      Authorization: JSON.parse(localStorage.getItem(\"labeddit\")).token,\n    },\n  };\n  try {\n    const response = await axios.put(\n      `${baseUrl}/posts/${postId}/comment/${commentId}/vote`,\n      { direction: direction },\n      axiosConfig\n    );\n    return response.data.success;\n  } catch (error) {\n    console.log(error.response);\n    return false;\n  }\n};\n\nexport const getPosts = async () => {\n  const axiosConfig = {\n    headers: {\n      Authorization: JSON.parse(localStorage.getItem(\"labeddit\")).token,\n    },\n  };\n  try {\n    const response = await axios.get(`${baseUrl}/posts`, axiosConfig);\n    return response.data.posts;\n  } catch (error) {\n    console.log(error.response);\n  }\n};\n\nexport const getPostDetail = async (postId) => {\n  const axiosConfig = {\n    headers: {\n      Authorization: JSON.parse(localStorage.getItem(\"labeddit\")).token,\n    },\n  };\n  try {\n    const response = await axios.get(`${baseUrl}/posts/${postId}`, axiosConfig);\n    return response.data.post;\n  } catch (error) {\n    console.log(error.response);\n  }\n};\n"]},"metadata":{},"sourceType":"module"}