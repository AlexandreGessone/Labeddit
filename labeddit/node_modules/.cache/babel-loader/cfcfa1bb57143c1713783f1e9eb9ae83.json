{"ast":null,"code":"var _jsxFileName = \"/Users/alexandregessone/Desktop/labeddit/mello-4eddit9/labeddit/src/components/PostCard/index.js\";\nimport React, { useContext } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { languages } from \"../../languages\";\nimport LanguageContext from \"../../contexts/LanguageContext\";\nimport { WhatsappShareButton, WhatsappIcon, FacebookIcon, FacebookShareButton, FacebookMessengerShareButton, FacebookMessengerIcon, TwitterIcon, TwitterShareButton } from \"react-share\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport Container from \"@material-ui/core/Container\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { KarmaWrapper, CardFooter, Comments, Content } from \"./styles\";\nimport KarmaCounter from \"../KarmaCounter\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    marginTop: theme.spacing(8),\n    width: \"100%\",\n    minWidth: 275\n  },\n  title: {\n    fontSize: 16\n  },\n  pos: {\n    marginBottom: 5\n  },\n  text: {\n    fontSize: 16,\n    marginBottom: 12\n  }\n}));\n\nconst PostCard = props => {\n  const {\n    postId,\n    userName,\n    title,\n    text,\n    commentsCount,\n    votesCount,\n    userVoteDirection,\n    createdAt,\n    feedpage\n  } = props;\n  const [selectedLanguage] = useContext(LanguageContext);\n  const classes = useStyles();\n  const history = useHistory();\n  const shareUrl = `${window.location.href}${feedpage ? `/${postId}` : \"\"}`;\n\n  const handleCommentClick = postId => feedpage && history.push(`posts/${postId}`);\n\n  const formatPostAge = created => {\n    const ageInMinutes = ((Date.now() - created) / 60000).toFixed(0);\n\n    if (ageInMinutes < 1) {\n      // menos de 1 minuto\n      return languages[selectedLanguage].now;\n    } else if (ageInMinutes < 59) {\n      // menos de 1 hora\n      return `${ageInMinutes} ${languages[selectedLanguage].minutes}`;\n    } else if (ageInMinutes < 119) {\n      // menos de 2 horas\n      return `1 ${languages[selectedLanguage].hour}`;\n    } else if (ageInMinutes < 1439) {\n      // menos de 1 dia\n      const ageInHours = (ageInMinutes / 60).toFixed(0);\n      return `${ageInHours} ${languages[selectedLanguage].hours}`;\n    } else if (ageInMinutes < 2879) {\n      // menos de 2 dias\n      return `1 ${languages[selectedLanguage].day}`;\n    } else if (ageInMinutes < 10079) {\n      // menos de 1 semana\n      const ageInDays = (ageInMinutes / 1440).toFixed(0);\n      return `${ageInDays} ${languages[selectedLanguage].days}`;\n    } else if (ageInMinutes < 43199) {\n      // menos de 1 mes\n      const ageInWeeks = (ageInMinutes / 10080).toFixed(0);\n      return `${ageInWeeks} ${languages[selectedLanguage].weeks}`;\n    } else if (ageInMinutes < 86400) {\n      return `1 ${languages[selectedLanguage].month}`;\n    } else {\n      // mais de 2 meses\n      const ageInMonths = (ageInMinutes / 43200).toFixed(0);\n      return `${ageInMonths} ${languages[selectedLanguage].months}`;\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Container, {\n    component: \"main\",\n    maxWidth: \"md\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: classes.root,\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(KarmaWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(KarmaCounter, {\n    userVoteDirection: userVoteDirection,\n    votesCount: votesCount,\n    postId: postId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Content, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.title,\n    color: \"textSecondary\",\n    gutterBottom: true,\n    style: {\n      whiteSpace: \"pre-wrap\",\n      wordBreak: \"break-all\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }\n  }, `${languages[selectedLanguage].postedBy} ${userName} ${formatPostAge(createdAt)}`), /*#__PURE__*/React.createElement(Typography, {\n    className: classes.pos,\n    variant: \"h5\",\n    component: \"h2\",\n    style: {\n      whiteSpace: \"pre-wrap\",\n      wordBreak: \"break-all\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }\n  }, title), /*#__PURE__*/React.createElement(Typography, {\n    className: classes.text,\n    style: {\n      whiteSpace: \"pre-wrap\",\n      wordBreak: \"break-all\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }\n  }, text), /*#__PURE__*/React.createElement(CardFooter, {\n    style: {\n      display: \"flex\",\n      justifyContent: \"space-between\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Comments, {\n    variant: \"subtitle2\",\n    onClick: () => handleCommentClick(postId),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 15\n    }\n  }, commentsCount, \" \", languages[selectedLanguage].commentCounterText), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(FacebookShareButton, {\n    url: shareUrl,\n    title: title,\n    separator: \":: \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FacebookIcon, {\n    size: 24,\n    round: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(FacebookMessengerShareButton, {\n    url: shareUrl,\n    title: title,\n    separator: \":: \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FacebookMessengerIcon, {\n    size: 24,\n    round: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(WhatsappShareButton, {\n    url: shareUrl,\n    title: title,\n    separator: \":: \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(WhatsappIcon, {\n    size: 24,\n    round: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(TwitterShareButton, {\n    url: shareUrl,\n    title: title,\n    separator: \":: \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(TwitterIcon, {\n    size: 24,\n    round: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 19\n    }\n  }))))))));\n};\n\nexport default PostCard;","map":{"version":3,"sources":["/Users/alexandregessone/Desktop/labeddit/mello-4eddit9/labeddit/src/components/PostCard/index.js"],"names":["React","useContext","useHistory","languages","LanguageContext","WhatsappShareButton","WhatsappIcon","FacebookIcon","FacebookShareButton","FacebookMessengerShareButton","FacebookMessengerIcon","TwitterIcon","TwitterShareButton","makeStyles","Card","Container","Typography","KarmaWrapper","CardFooter","Comments","Content","KarmaCounter","useStyles","theme","root","marginTop","spacing","width","minWidth","title","fontSize","pos","marginBottom","text","PostCard","props","postId","userName","commentsCount","votesCount","userVoteDirection","createdAt","feedpage","selectedLanguage","classes","history","shareUrl","window","location","href","handleCommentClick","push","formatPostAge","created","ageInMinutes","Date","now","toFixed","minutes","hour","ageInHours","hours","day","ageInDays","days","ageInWeeks","weeks","month","ageInMonths","months","whiteSpace","wordBreak","postedBy","display","justifyContent","commentCounterText"],"mappings":"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","sourcesContent":["import React, { useContext } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nimport { languages } from \"../../languages\";\nimport LanguageContext from \"../../contexts/LanguageContext\";\n\nimport {\n  WhatsappShareButton,\n  WhatsappIcon,\n  FacebookIcon,\n  FacebookShareButton,\n  FacebookMessengerShareButton,\n  FacebookMessengerIcon,\n  TwitterIcon,\n  TwitterShareButton,\n} from \"react-share\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport Container from \"@material-ui/core/Container\";\nimport Typography from \"@material-ui/core/Typography\";\n\nimport { KarmaWrapper, CardFooter, Comments, Content } from \"./styles\";\n\nimport KarmaCounter from \"../KarmaCounter\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    marginTop: theme.spacing(8),\n    width: \"100%\",\n    minWidth: 275,\n  },\n  title: {\n    fontSize: 16,\n  },\n  pos: {\n    marginBottom: 5,\n  },\n  text: {\n    fontSize: 16,\n    marginBottom: 12,\n  },\n}));\n\nconst PostCard = (props) => {\n  const {\n    postId,\n    userName,\n    title,\n    text,\n    commentsCount,\n    votesCount,\n    userVoteDirection,\n    createdAt,\n    feedpage,\n  } = props;\n  const [selectedLanguage] = useContext(LanguageContext);\n  const classes = useStyles();\n  const history = useHistory();\n\n  const shareUrl = `${window.location.href}${feedpage ? `/${postId}` : \"\"}`;\n\n  const handleCommentClick = (postId) =>\n    feedpage && history.push(`posts/${postId}`);\n\n  const formatPostAge = (created) => {\n    const ageInMinutes = ((Date.now() - created) / 60000).toFixed(0);\n    if (ageInMinutes < 1) {\n      // menos de 1 minuto\n      return languages[selectedLanguage].now;\n    } else if (ageInMinutes < 59) {\n      // menos de 1 hora\n      return `${ageInMinutes} ${languages[selectedLanguage].minutes}`;\n    } else if (ageInMinutes < 119) {\n      // menos de 2 horas\n      return `1 ${languages[selectedLanguage].hour}`;\n    } else if (ageInMinutes < 1439) {\n      // menos de 1 dia\n      const ageInHours = (ageInMinutes / 60).toFixed(0);\n      return `${ageInHours} ${languages[selectedLanguage].hours}`;\n    } else if (ageInMinutes < 2879) {\n      // menos de 2 dias\n      return `1 ${languages[selectedLanguage].day}`;\n    } else if (ageInMinutes < 10079) {\n      // menos de 1 semana\n      const ageInDays = (ageInMinutes / 1440).toFixed(0);\n      return `${ageInDays} ${languages[selectedLanguage].days}`;\n    } else if (ageInMinutes < 43199) {\n      // menos de 1 mes\n      const ageInWeeks = (ageInMinutes / 10080).toFixed(0);\n      return `${ageInWeeks} ${languages[selectedLanguage].weeks}`;\n    } else if (ageInMinutes < 86400) {\n      return `1 ${languages[selectedLanguage].month}`;\n    } else {\n      // mais de 2 meses\n      const ageInMonths = (ageInMinutes / 43200).toFixed(0);\n      return `${ageInMonths} ${languages[selectedLanguage].months}`;\n    }\n  };\n\n  return (\n    <Container component=\"main\" maxWidth=\"md\">\n      <Card className={classes.root} variant=\"outlined\">\n        <KarmaWrapper>\n          <KarmaCounter\n            userVoteDirection={userVoteDirection}\n            votesCount={votesCount}\n            postId={postId}\n          />\n          <Content>\n            <Typography\n              className={classes.title}\n              color=\"textSecondary\"\n              gutterBottom\n              style={{ whiteSpace: \"pre-wrap\", wordBreak: \"break-all\" }}\n            >\n              {`${\n                languages[selectedLanguage].postedBy\n              } ${userName} ${formatPostAge(createdAt)}`}\n            </Typography>\n            <Typography\n              className={classes.pos}\n              variant=\"h5\"\n              component=\"h2\"\n              style={{ whiteSpace: \"pre-wrap\", wordBreak: \"break-all\" }}\n            >\n              {title}\n            </Typography>\n            <Typography\n              className={classes.text}\n              style={{ whiteSpace: \"pre-wrap\", wordBreak: \"break-all\" }}\n            >\n              {text}\n            </Typography>\n            <CardFooter\n              style={{ display: \"flex\", justifyContent: \"space-between\" }}\n            >\n              <Comments\n                variant=\"subtitle2\"\n                onClick={() => handleCommentClick(postId)}\n              >\n                {commentsCount} {languages[selectedLanguage].commentCounterText}\n              </Comments>\n\n              <div>\n                <FacebookShareButton\n                  url={shareUrl}\n                  title={title}\n                  separator=\":: \"\n                >\n                  <FacebookIcon size={24} round />\n                </FacebookShareButton>\n                <FacebookMessengerShareButton\n                  url={shareUrl}\n                  title={title}\n                  separator=\":: \"\n                >\n                  <FacebookMessengerIcon size={24} round />\n                </FacebookMessengerShareButton>\n                <WhatsappShareButton\n                  url={shareUrl}\n                  title={title}\n                  separator=\":: \"\n                >\n                  <WhatsappIcon size={24} round />\n                </WhatsappShareButton>\n                <TwitterShareButton\n                  url={shareUrl}\n                  title={title}\n                  separator=\":: \"\n                >\n                  <TwitterIcon size={24} round />\n                </TwitterShareButton>\n              </div>\n            </CardFooter>\n          </Content>\n        </KarmaWrapper>\n      </Card>\n    </Container>\n  );\n};\n\nexport default PostCard;\n"]},"metadata":{},"sourceType":"module"}