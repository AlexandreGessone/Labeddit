{"ast":null,"code":"var _jsxFileName = \"/Users/alexandregessone/Desktop/labeddit/mello-4eddit9/labeddit/src/components/Header/index.js\";\nimport React, { useContext } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Button from \"@material-ui/core/Button\";\nimport useScrollTrigger from \"@material-ui/core/useScrollTrigger\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { useHistory } from \"react-router-dom\";\nimport LanguageContext from \"../../contexts/LanguageContext\";\nimport { languages } from \"../../languages\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  title: {\n    flexGrow: 1\n  },\n  color: {\n    background: \"#f2f2f2\"\n  }\n}));\n\nfunction ElevationScroll(props) {\n  const {\n    children,\n    window\n  } = props;\n  const trigger = useScrollTrigger({\n    disableHysteresis: true,\n    threshold: 0,\n    target: window ? window() : undefined\n  });\n  return React.cloneElement(children, {\n    elevation: trigger ? 4 : 0\n  });\n}\n\nconst Header = props => {\n  const [selectedLanguage, setLanguage] = useContext(LanguageContext);\n  const classes = useStyles();\n  const history = useHistory();\n\n  const handleLanguageSelect = event => {\n    localStorage.setItem(\"language\", event.target.value);\n    setLanguage(event.target.value);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ElevationScroll, Object.assign({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(AppBar, {\n    className: classes.color,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Toolbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    color: \"secondary\",\n    variant: \"h6\",\n    className: classes.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }, \"LOGO\"), /*#__PURE__*/React.createElement(Button, {\n    onClick: () => {\n      localStorage.removeItem(\"labeddit\");\n      history.push(\"/login\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, languages[selectedLanguage].logoutLabel), /*#__PURE__*/React.createElement(\"select\", {\n    value: selectedLanguage,\n    onChange: handleLanguageSelect,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"pt\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 15\n    }\n  }, \"PT\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"en\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 15\n    }\n  }, \"EN\"))))), /*#__PURE__*/React.createElement(Toolbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default Header;","map":{"version":3,"sources":["/Users/alexandregessone/Desktop/labeddit/mello-4eddit9/labeddit/src/components/Header/index.js"],"names":["React","useContext","makeStyles","AppBar","Toolbar","Button","useScrollTrigger","Typography","useHistory","LanguageContext","languages","useStyles","theme","root","flexGrow","title","color","background","ElevationScroll","props","children","window","trigger","disableHysteresis","threshold","target","undefined","cloneElement","elevation","Header","selectedLanguage","setLanguage","classes","history","handleLanguageSelect","event","localStorage","setItem","value","removeItem","push","logoutLabel"],"mappings":"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","sourcesContent":["import React, { useContext } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Button from \"@material-ui/core/Button\";\nimport useScrollTrigger from \"@material-ui/core/useScrollTrigger\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { useHistory } from \"react-router-dom\";\nimport LanguageContext from \"../../contexts/LanguageContext\";\nimport { languages } from \"../../languages\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  title: {\n    flexGrow: 1,\n  },\n  color: {\n    background: \"#f2f2f2\",\n  },\n}));\n\nfunction ElevationScroll(props) {\n  const { children, window } = props;\n\n  const trigger = useScrollTrigger({\n    disableHysteresis: true,\n    threshold: 0,\n    target: window ? window() : undefined,\n  });\n\n  return React.cloneElement(children, {\n    elevation: trigger ? 4 : 0,\n  });\n}\n\nconst Header = (props) => {\n  const [selectedLanguage, setLanguage] = useContext(LanguageContext);\n  const classes = useStyles();\n  const history = useHistory();\n  const handleLanguageSelect = (event) => {\n    localStorage.setItem(\"language\", event.target.value);\n    setLanguage(event.target.value);\n  };\n\n  return (\n    <React.Fragment>\n      <ElevationScroll {...props}>\n        <AppBar className={classes.color}>\n          <Toolbar>\n            <Typography\n              color=\"secondary\"\n              variant=\"h6\"\n              className={classes.title}\n            >\n              LOGO\n            </Typography>\n            <Button\n              onClick={() => {\n                localStorage.removeItem(\"labeddit\");\n                history.push(\"/login\");\n              }}\n            >\n              {languages[selectedLanguage].logoutLabel}\n            </Button>\n            <select value={selectedLanguage} onChange={handleLanguageSelect}>\n              <option value={\"pt\"}>PT</option>\n              <option value={\"en\"}>EN</option>\n            </select>\n          </Toolbar>\n        </AppBar>\n      </ElevationScroll>\n      <Toolbar />\n    </React.Fragment>\n  );\n};\n\nexport default Header;\n"]},"metadata":{},"sourceType":"module"}