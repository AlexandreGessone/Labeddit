{"ast":null,"code":"var _jsxFileName = \"/Users/alexandregessone/Desktop/labeddit/mello-4eddit9/labeddit/src/components/LoginPage/index.js\";\nimport React, { useContext } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport useForm from \"../../hooks/useForm\";\nimport { Helmet } from \"react-helmet-async\";\nimport { languages } from \"../../languages\";\nimport LanguageContext from \"../../contexts/LanguageContext\";\nimport UserContext from \"../../contexts/UserContext\";\nimport { login } from \"../../functions/axios\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Link from \"@material-ui/core/Link\";\nimport Box from \"@material-ui/core/Box\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Container from \"@material-ui/core/Container\";\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\"\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main\n  },\n  form: {\n    width: \"100%\",\n    // Fix IE 11 issue.\n    marginTop: theme.spacing(1)\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2)\n  }\n}));\n\nconst LoginPage = () => {\n  const [selectedLanguage] = useContext(LanguageContext);\n  const {\n    setUserData\n  } = useContext(UserContext);\n  const classes = useStyles();\n  const history = useHistory();\n  const [form, handleFormChange] = useForm({\n    email: \"\",\n    password: \"\"\n  });\n\n  const handleFormSubmit = async event => {\n    event.preventDefault();\n    const response = await login(form);\n\n    if (response.token) {\n      localStorage.setItem(\"labeddit\", JSON.stringify(response));\n      setUserData(response);\n      history.push(\"/posts\");\n    } else {\n      window.alert(response.message);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Container, {\n    component: \"main\",\n    maxWidth: \"xs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Helmet, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"title\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, languages[selectedLanguage].loginLabel)), /*#__PURE__*/React.createElement(CssBaseline, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Avatar, {\n    className: classes.avatar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(LockOutlinedIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Typography, {\n    component: \"h1\",\n    variant: \"h5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, languages[selectedLanguage].loginLabel), /*#__PURE__*/React.createElement(\"form\", {\n    className: classes.form,\n    onSubmit: handleFormSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    onChange: handleFormChange,\n    value: form.email,\n    variant: \"outlined\",\n    margin: \"normal\",\n    required: true,\n    fullWidth: true,\n    label: languages[selectedLanguage].emailLabel,\n    name: \"email\",\n    autoFocus: true,\n    type: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    onChange: handleFormChange,\n    value: form.password,\n    variant: \"outlined\",\n    margin: \"normal\",\n    required: true,\n    fullWidth: true,\n    name: \"password\",\n    label: languages[selectedLanguage].passwordLabel,\n    type: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    fullWidth: true,\n    variant: \"contained\",\n    color: \"primary\",\n    className: classes.submit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 11\n    }\n  }, languages[selectedLanguage].loginLabel)), /*#__PURE__*/React.createElement(Link, {\n    onClick: () => history.push(\"/signup\"),\n    variant: \"body2\",\n    style: {\n      cursor: \"pointer\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }\n  }, languages[selectedLanguage].signupText)), /*#__PURE__*/React.createElement(Box, {\n    mt: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    color: \"textSecondary\",\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }\n  }, \"Copyright Â© LabEddit9 2020.\")));\n};\n\nexport default LoginPage;","map":{"version":3,"sources":["/Users/alexandregessone/Desktop/labeddit/mello-4eddit9/labeddit/src/components/LoginPage/index.js"],"names":["React","useContext","useHistory","useForm","Helmet","languages","LanguageContext","UserContext","login","makeStyles","Avatar","Button","CssBaseline","TextField","Link","Box","LockOutlinedIcon","Typography","Container","useStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","form","width","submit","LoginPage","selectedLanguage","setUserData","classes","history","handleFormChange","email","password","handleFormSubmit","event","preventDefault","response","token","localStorage","setItem","JSON","stringify","push","window","alert","message","loginLabel","emailLabel","passwordLabel","cursor","signupText"],"mappings":"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","sourcesContent":["import React, { useContext } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport useForm from \"../../hooks/useForm\";\n\nimport { Helmet } from \"react-helmet-async\";\n\nimport { languages } from \"../../languages\";\nimport LanguageContext from \"../../contexts/LanguageContext\";\nimport UserContext from \"../../contexts/UserContext\";\n\nimport { login } from \"../../functions/axios\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Link from \"@material-ui/core/Link\";\nimport Box from \"@material-ui/core/Box\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Container from \"@material-ui/core/Container\";\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nconst LoginPage = () => {\n  const [selectedLanguage] = useContext(LanguageContext);\n  const { setUserData } = useContext(UserContext);\n  const classes = useStyles();\n  const history = useHistory();\n  const [form, handleFormChange] = useForm({ email: \"\", password: \"\" });\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    const response = await login(form);\n    if (response.token) {\n      localStorage.setItem(\"labeddit\", JSON.stringify(response));\n      setUserData(response);\n      history.push(\"/posts\");\n    } else {\n      window.alert(response.message);\n    }\n  };\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <Helmet>\n        <title>{languages[selectedLanguage].loginLabel}</title>\n      </Helmet>\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          {languages[selectedLanguage].loginLabel}\n        </Typography>\n        <form className={classes.form} onSubmit={handleFormSubmit}>\n          <TextField\n            onChange={handleFormChange}\n            value={form.email}\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            label={languages[selectedLanguage].emailLabel}\n            name=\"email\"\n            autoFocus\n            type=\"email\"\n          />\n          <TextField\n            onChange={handleFormChange}\n            value={form.password}\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"password\"\n            label={languages[selectedLanguage].passwordLabel}\n            type=\"password\"\n          />\n\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n          >\n            {languages[selectedLanguage].loginLabel}\n          </Button>\n        </form>\n        <Link\n          onClick={() => history.push(\"/signup\")}\n          variant=\"body2\"\n          style={{ cursor: \"pointer\" }}\n        >\n          {languages[selectedLanguage].signupText}\n        </Link>\n      </div>\n      <Box mt={8}>\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n          {\"Copyright Â© LabEddit9 2020.\"}\n        </Typography>\n      </Box>\n    </Container>\n  );\n};\n\nexport default LoginPage;\n"]},"metadata":{},"sourceType":"module"}