{"ast":null,"code":"var _jsxFileName = \"/Users/alexandregessone/Desktop/labeddit/mello-4eddit9/labeddit/src/components/CommentForm/index.js\";\nimport React, { useContext } from \"react\";\nimport useForm from \"../../hooks/useForm\";\nimport { languages } from \"../../languages\";\nimport LanguageContext from \"../../contexts/LanguageContext\";\nimport { createComment } from \"../../functions/axios\";\nimport Container from \"@material-ui/core/Container\";\nimport Card from \"@material-ui/core/Card\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { FormContainer, Submit, TextInput } from \"./styles\";\n\nconst CommentForm = props => {\n  const {\n    postId,\n    getPostDetails\n  } = props;\n  const [form, handleFormChange, resetForm] = useForm({\n    text: \"\"\n  });\n  const [selectedLanguage] = useContext(LanguageContext);\n\n  const handleFormSubmit = async event => {\n    event.preventDefault();\n    const success = await createComment(postId, form);\n\n    if (success) {\n      resetForm();\n      getPostDetails(postId);\n    } else {\n      alert(languages[selectedLanguage].postErrorAlert);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Container, {\n    component: \"main\",\n    maxWidth: \"md\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    variant: \"outlined\",\n    style: {\n      marginTop: \"20px\",\n      minWidth: \"275px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FormContainer, {\n    onSubmit: handleFormSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: \"90%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    style: {\n      marginBottom: \"5px\",\n      color: \"#2e2e2d\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, languages[selectedLanguage].commentFormLabel), /*#__PURE__*/React.createElement(TextInput, {\n    required: true,\n    value: form.text,\n    variant: \"outlined\",\n    label: languages[selectedLanguage].commentTextPlaceholder,\n    type: \"text\",\n    name: \"text\",\n    onChange: handleFormChange,\n    multiline: true,\n    rows: 5,\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Submit, {\n    type: \"submit\",\n    variant: \"contained\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }\n  }, languages[selectedLanguage].postButton))));\n};\n\nexport default CommentForm;","map":{"version":3,"sources":["/Users/alexandregessone/Desktop/labeddit/mello-4eddit9/labeddit/src/components/CommentForm/index.js"],"names":["React","useContext","useForm","languages","LanguageContext","createComment","Container","Card","Typography","FormContainer","Submit","TextInput","CommentForm","props","postId","getPostDetails","form","handleFormChange","resetForm","text","selectedLanguage","handleFormSubmit","event","preventDefault","success","alert","postErrorAlert","marginTop","minWidth","width","marginBottom","color","commentFormLabel","commentTextPlaceholder","postButton"],"mappings":"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","sourcesContent":["import React, { useContext } from \"react\";\nimport useForm from \"../../hooks/useForm\";\n\nimport { languages } from \"../../languages\";\nimport LanguageContext from \"../../contexts/LanguageContext\";\n\nimport { createComment } from \"../../functions/axios\";\n\nimport Container from \"@material-ui/core/Container\";\nimport Card from \"@material-ui/core/Card\";\nimport Typography from \"@material-ui/core/Typography\";\n\nimport { FormContainer, Submit, TextInput } from \"./styles\";\n\nconst CommentForm = (props) => {\n  const { postId, getPostDetails } = props;\n  const [form, handleFormChange, resetForm] = useForm({ text: \"\" });\n  const [selectedLanguage] = useContext(LanguageContext);\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    const success = await createComment(postId, form);\n    if (success) {\n      resetForm();\n      getPostDetails(postId);\n    } else {\n      alert(languages[selectedLanguage].postErrorAlert);\n    }\n  };\n\n  return (\n    <Container component=\"main\" maxWidth=\"md\">\n      <Card variant=\"outlined\" style={{ marginTop: \"20px\", minWidth: \"275px\" }}>\n        <FormContainer onSubmit={handleFormSubmit}>\n          <div style={{ width: \"90%\" }}>\n            <Typography\n              variant=\"h6\"\n              style={{ marginBottom: \"5px\", color: \"#2e2e2d\" }}\n            >\n              {languages[selectedLanguage].commentFormLabel}\n            </Typography>\n            <TextInput\n              required\n              value={form.text}\n              variant=\"outlined\"\n              label={languages[selectedLanguage].commentTextPlaceholder}\n              type=\"text\"\n              name=\"text\"\n              onChange={handleFormChange}\n              multiline\n              rows={5}\n              fullWidth\n            />\n          </div>\n          <Submit type=\"submit\" variant=\"contained\">\n            {languages[selectedLanguage].postButton}\n          </Submit>\n        </FormContainer>\n      </Card>\n    </Container>\n  );\n};\n\nexport default CommentForm;\n"]},"metadata":{},"sourceType":"module"}