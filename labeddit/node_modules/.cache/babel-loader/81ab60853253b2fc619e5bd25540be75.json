{"ast":null,"code":"var _jsxFileName = \"/Users/alexandregessone/Desktop/labeddit/mello-4eddit9/labeddit/src/components/PostForm/index.js\";\nimport React, { useContext } from \"react\";\nimport useForm from \"../../hooks/useForm\";\nimport { languages } from \"../../languages\";\nimport LanguageContext from \"../../contexts/LanguageContext\";\nimport { createPost } from \"../../functions/axios\";\nimport Container from \"@material-ui/core/Container\";\nimport Card from \"@material-ui/core/Card\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { FormContainer, Submit, TextInput } from \"./styles\";\n\nconst PostForm = props => {\n  const {\n    getPosts\n  } = props;\n  const [form, handleFormChange, resetForm] = useForm({\n    text: \"\",\n    title: \"\"\n  });\n  const [selectedLanguage] = useContext(LanguageContext);\n\n  const handleFormSubmit = async event => {\n    event.preventDefault();\n    const success = await createPost(form);\n\n    if (success) {\n      resetForm();\n      getPosts();\n    } else {\n      alert(languages[selectedLanguage].postErrorAlert);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Container, {\n    component: \"main\",\n    maxWidth: \"md\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    variant: \"outlined\",\n    style: {\n      marginTop: \"20px\",\n      minWidth: \"275px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FormContainer, {\n    onSubmit: handleFormSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: \"90%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    style: {\n      marginBottom: \"5px\",\n      color: \"#2e2e2d\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, languages[selectedLanguage].postFormLabel), /*#__PURE__*/React.createElement(TextInput, {\n    required: true,\n    value: form.title,\n    variant: \"outlined\",\n    label: languages[selectedLanguage].postTitlePlaceholder,\n    type: \"text\",\n    name: \"title\",\n    onChange: handleFormChange,\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(TextInput, {\n    required: true,\n    value: form.text,\n    variant: \"outlined\",\n    label: languages[selectedLanguage].postTextPlaceholder,\n    type: \"text\",\n    name: \"text\",\n    onChange: handleFormChange,\n    multiline: true,\n    rows: 5,\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Submit, {\n    type: \"submit\",\n    variant: \"contained\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  }, languages[selectedLanguage].postButton))));\n};\n\nexport default PostForm;","map":{"version":3,"sources":["/Users/alexandregessone/Desktop/labeddit/mello-4eddit9/labeddit/src/components/PostForm/index.js"],"names":["React","useContext","useForm","languages","LanguageContext","createPost","Container","Card","Typography","FormContainer","Submit","TextInput","PostForm","props","getPosts","form","handleFormChange","resetForm","text","title","selectedLanguage","handleFormSubmit","event","preventDefault","success","alert","postErrorAlert","marginTop","minWidth","width","marginBottom","color","postFormLabel","postTitlePlaceholder","postTextPlaceholder","postButton"],"mappings":"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","sourcesContent":["import React, { useContext } from \"react\";\nimport useForm from \"../../hooks/useForm\";\n\nimport { languages } from \"../../languages\";\nimport LanguageContext from \"../../contexts/LanguageContext\";\n\nimport { createPost } from \"../../functions/axios\";\n\nimport Container from \"@material-ui/core/Container\";\nimport Card from \"@material-ui/core/Card\";\nimport Typography from \"@material-ui/core/Typography\";\n\nimport { FormContainer, Submit, TextInput } from \"./styles\";\n\nconst PostForm = (props) => {\n  const { getPosts } = props;\n  const [form, handleFormChange, resetForm] = useForm({ text: \"\", title: \"\" });\n  const [selectedLanguage] = useContext(LanguageContext);\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    const success = await createPost(form);\n    if (success) {\n      resetForm();\n      getPosts();\n    } else {\n      alert(languages[selectedLanguage].postErrorAlert);\n    }\n  };\n\n  return (\n    <Container component=\"main\" maxWidth=\"md\">\n      <Card variant=\"outlined\" style={{ marginTop: \"20px\", minWidth: \"275px\" }}>\n        <FormContainer onSubmit={handleFormSubmit}>\n          <div style={{ width: \"90%\" }}>\n            <Typography\n              variant=\"h6\"\n              style={{ marginBottom: \"5px\", color: \"#2e2e2d\" }}\n            >\n              {languages[selectedLanguage].postFormLabel}\n            </Typography>\n            <TextInput\n              required\n              value={form.title}\n              variant=\"outlined\"\n              label={languages[selectedLanguage].postTitlePlaceholder}\n              type=\"text\"\n              name=\"title\"\n              onChange={handleFormChange}\n              fullWidth\n            />\n            <TextInput\n              required\n              value={form.text}\n              variant=\"outlined\"\n              label={languages[selectedLanguage].postTextPlaceholder}\n              type=\"text\"\n              name=\"text\"\n              onChange={handleFormChange}\n              multiline\n              rows={5}\n              fullWidth\n            />\n          </div>\n          <Submit type=\"submit\" variant=\"contained\">\n            {languages[selectedLanguage].postButton}\n          </Submit>\n        </FormContainer>\n      </Card>\n    </Container>\n  );\n};\n\nexport default PostForm;\n"]},"metadata":{},"sourceType":"module"}