{"ast":null,"code":"var _jsxFileName = \"/Users/alexandregessone/Desktop/labeddit/mello-4eddit9/labeddit/src/components/FeedPage/index.js\";\nimport React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport useForm from \"../../hooks/useForm\";\nimport usePosts from \"../../hooks/usePosts\";\nimport { Helmet } from \"react-helmet-async\";\nimport { createPost } from '../../functions/axios';\nimport styled from 'styled-components';\nimport TextField from \"@material-ui/core/TextField\";\nimport Container from \"@material-ui/core/Container\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\ni;\nconst FormContainer = styled.form`\n    display: grid;\n    justify-items: center;\n    margin-top: 20px;\n    \n`;\nconst Post = styled.div`\n    margin-top: 20px;\n    margin-left: 850px;\n`;\nconst InputPost = styled.input`\n    width: 200px;\n    height: 100px;\n`;\nconst InputTitle = styled.input`\n    width: 200px;\n\n`;\n\nconst FeedPage = () => {\n  const [posts, getPosts] = usePosts();\n  const history = useHistory();\n  const [form, handleFormChange] = useForm({\n    text: \"\",\n    title: \"\"\n  });\n\n  const handleFormSubmit = async event => {\n    event.preventDefault();\n    const response = await createPost(form);\n\n    if (response.token) {\n      localStorage.setItem(\"labeddit\", JSON.stringify(response));\n      history.push(\"/posts\");\n    } else {\n      window.alert(response.message);\n    }\n  };\n\n  const handlePostClick = postId => history.push(`posts/${postId}`);\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleFormSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FormContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    id: \"outlined-basic\",\n    variant: \"outlined\",\n    placeholder: \"Escrever post\",\n    type: \"text\",\n    name: \"text\",\n    onChange: handleFormChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    id: \"outlined-basic\",\n    variant: \"outlined\",\n    placeholder: \"T\\xEDtulo\",\n    type: \"text\",\n    name: \"title\",\n    onChange: handleFormChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    type: \"submit\",\n    onClick: handlePostClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 15\n    }\n  }, \"Postar\")))), /*#__PURE__*/React.createElement(Helmet, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"title\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }, \"LabEddit\")), posts.map(post => /*#__PURE__*/React.createElement(PostCard, {\n    key: post.id,\n    postId: post.id,\n    userName: post.username,\n    title: post.title,\n    text: post.text,\n    commentsCount: post.commentsCount,\n    votesCount: post.votesCount,\n    userVoteDirection: post.userVoteDirection,\n    feedpage: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default FeedPage;","map":{"version":3,"sources":["/Users/alexandregessone/Desktop/labeddit/mello-4eddit9/labeddit/src/components/FeedPage/index.js"],"names":["React","useHistory","useForm","usePosts","Helmet","createPost","styled","TextField","Container","makeStyles","Button","i","FormContainer","form","Post","div","InputPost","input","InputTitle","FeedPage","posts","getPosts","history","handleFormChange","text","title","handleFormSubmit","event","preventDefault","response","token","localStorage","setItem","JSON","stringify","push","window","alert","message","handlePostClick","postId","map","post","id","username","commentsCount","votesCount","userVoteDirection"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport useForm from \"../../hooks/useForm\";\nimport usePosts from \"../../hooks/usePosts\";\nimport { Helmet } from \"react-helmet-async\";\nimport { createPost } from '../../functions/axios'\nimport styled from 'styled-components';\nimport TextField from \"@material-ui/core/TextField\";\nimport Container from \"@material-ui/core/Container\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\ni\n\n\nconst FormContainer = styled.form`\n    display: grid;\n    justify-items: center;\n    margin-top: 20px;\n    \n`\n\nconst Post = styled.div`\n    margin-top: 20px;\n    margin-left: 850px;\n`\n\nconst InputPost = styled.input`\n    width: 200px;\n    height: 100px;\n`\nconst InputTitle = styled.input`\n    width: 200px;\n\n`\n\nconst FeedPage = () => {\n\n  const [posts, getPosts] = usePosts();\n  const history = useHistory();\n\n\n  const [form, handleFormChange] = useForm({ text: \"\", title: \"\" });\n\n    const handleFormSubmit = async (event) => {\n        event.preventDefault();\n        const response = await createPost(form);\n        if (response.token) {\n          localStorage.setItem(\"labeddit\", JSON.stringify(response));\n          history.push(\"/posts\");\n        } else {\n          window.alert(response.message);\n        }\n    };\n\n\n  const handlePostClick = (postId) => history.push(`posts/${postId}`);\n\n  return (\n    <div>\n      <form onSubmit={handleFormSubmit}>\n          <FormContainer>\n            <p>\n              <TextField id=\"outlined-basic\" variant=\"outlined\"\n              placeholder=\"Escrever post\"\n              type=\"text\"\n              name=\"text\"\n              onChange={handleFormChange}\n              />\n            </p>\n            \n            <p>\n              <TextField id=\"outlined-basic\" variant=\"outlined\"\n              placeholder=\"TÃ­tulo\"\n              type=\"text\"\n              name=\"title\"\n              onChange={handleFormChange}\n              />\n            </p>\n            \n            <p>\n              <Button variant=\"contained\" type=\"submit\" onClick={handlePostClick}>Postar</Button>\n            </p>\n          </FormContainer>\n          \n        </form>\n\n\n      <Helmet>\n        <title>LabEddit</title>\n      </Helmet>\n      {posts.map((post) => (\n        <PostCard\n          key={post.id}\n          postId={post.id}\n          userName={post.username}\n          title={post.title}\n          text={post.text}\n          commentsCount={post.commentsCount}\n          votesCount={post.votesCount}\n          userVoteDirection={post.userVoteDirection}\n          feedpage\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default FeedPage;\n"]},"metadata":{},"sourceType":"module"}