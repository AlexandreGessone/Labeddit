{"ast":null,"code":"var _jsxFileName = \"/Users/alexandregessone/Desktop/labeddit/mello-4eddit9/labeddit/src/components/KarmaCounter/index.js\";\nimport React, { useReducer } from \"react\";\nimport { karmaReducer } from \"../../functions/karmaReducer\";\nimport { votePost, voteComment } from \"../../functions/axios\";\nimport { CounterWrapper, UpvoteButton, DownvoteButton, VotesCount } from \"./styles\";\n\nconst KarmaCounter = props => {\n  const {\n    userVoteDirection,\n    votesCount,\n    postId,\n    commentId\n  } = props;\n  const [state, dispatch] = useReducer(karmaReducer, {\n    userVoteDirection,\n    votesCount\n  });\n\n  const upvote = () => {\n    dispatch({\n      type: \"UPVOTE\"\n    });\n\n    if (commentId) {\n      voteComment(postId, commentId, userVoteDirection === 1 ? 0 : 1);\n    } else {\n      votePost(postId, userVoteDirection === 1 ? 0 : 1);\n    }\n  };\n\n  const downvote = () => {\n    dispatch({\n      type: \"DOWNVOTE\"\n    });\n\n    if (commentId) {\n      voteComment(postId, commentId, userVoteDirection === -1 ? 0 : -1);\n    } else {\n      votePost(postId, userVoteDirection === -1 ? 0 : -1);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(CounterWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(UpvoteButton, {\n    voted: state.userVoteDirection === 1 ? true : false,\n    onClick: upvote,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, \"+\"), /*#__PURE__*/React.createElement(VotesCount, {\n    direction: state.userVoteDirection,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, state.votesCount), /*#__PURE__*/React.createElement(DownvoteButton, {\n    voted: state.userVoteDirection === -1 ? true : false,\n    onClick: downvote,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, \"-\"));\n};\n\nexport default KarmaCounter;","map":{"version":3,"sources":["/Users/alexandregessone/Desktop/labeddit/mello-4eddit9/labeddit/src/components/KarmaCounter/index.js"],"names":["React","useReducer","karmaReducer","votePost","voteComment","CounterWrapper","UpvoteButton","DownvoteButton","VotesCount","KarmaCounter","props","userVoteDirection","votesCount","postId","commentId","state","dispatch","upvote","type","downvote"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,YAAT,QAA6B,8BAA7B;AAEA,SAASC,QAAT,EAAmBC,WAAnB,QAAsC,uBAAtC;AAEA,SACEC,cADF,EAEEC,YAFF,EAGEC,cAHF,EAIEC,UAJF,QAKO,UALP;;AAOA,MAAMC,YAAY,GAAIC,KAAD,IAAW;AAC9B,QAAM;AAAEC,IAAAA,iBAAF;AAAqBC,IAAAA,UAArB;AAAiCC,IAAAA,MAAjC;AAAyCC,IAAAA;AAAzC,MAAuDJ,KAA7D;AACA,QAAM,CAACK,KAAD,EAAQC,QAAR,IAAoBf,UAAU,CAACC,YAAD,EAAe;AACjDS,IAAAA,iBADiD;AAEjDC,IAAAA;AAFiD,GAAf,CAApC;;AAKA,QAAMK,MAAM,GAAG,MAAM;AACnBD,IAAAA,QAAQ,CAAC;AAAEE,MAAAA,IAAI,EAAE;AAAR,KAAD,CAAR;;AACA,QAAIJ,SAAJ,EAAe;AACbV,MAAAA,WAAW,CAACS,MAAD,EAASC,SAAT,EAAoBH,iBAAiB,KAAK,CAAtB,GAA0B,CAA1B,GAA8B,CAAlD,CAAX;AACD,KAFD,MAEO;AACLR,MAAAA,QAAQ,CAACU,MAAD,EAASF,iBAAiB,KAAK,CAAtB,GAA0B,CAA1B,GAA8B,CAAvC,CAAR;AACD;AACF,GAPD;;AAQA,QAAMQ,QAAQ,GAAG,MAAM;AACrBH,IAAAA,QAAQ,CAAC;AAAEE,MAAAA,IAAI,EAAE;AAAR,KAAD,CAAR;;AACA,QAAIJ,SAAJ,EAAe;AACbV,MAAAA,WAAW,CAACS,MAAD,EAASC,SAAT,EAAoBH,iBAAiB,KAAK,CAAC,CAAvB,GAA2B,CAA3B,GAA+B,CAAC,CAApD,CAAX;AACD,KAFD,MAEO;AACLR,MAAAA,QAAQ,CAACU,MAAD,EAASF,iBAAiB,KAAK,CAAC,CAAvB,GAA2B,CAA3B,GAA+B,CAAC,CAAzC,CAAR;AACD;AACF,GAPD;;AASA,sBACE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,YAAD;AACE,IAAA,KAAK,EAAEI,KAAK,CAACJ,iBAAN,KAA4B,CAA5B,GAAgC,IAAhC,GAAuC,KADhD;AAEE,IAAA,OAAO,EAAEM,MAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADF,eAOE,oBAAC,UAAD;AAAY,IAAA,SAAS,EAAEF,KAAK,CAACJ,iBAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGI,KAAK,CAACH,UADT,CAPF,eAUE,oBAAC,cAAD;AACE,IAAA,KAAK,EAAEG,KAAK,CAACJ,iBAAN,KAA4B,CAAC,CAA7B,GAAiC,IAAjC,GAAwC,KADjD;AAEE,IAAA,OAAO,EAAEQ,QAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAVF,CADF;AAmBD,CA3CD;;AA6CA,eAAeV,YAAf","sourcesContent":["import React, { useReducer } from \"react\";\nimport { karmaReducer } from \"../../functions/karmaReducer\";\n\nimport { votePost, voteComment } from \"../../functions/axios\";\n\nimport {\n  CounterWrapper,\n  UpvoteButton,\n  DownvoteButton,\n  VotesCount,\n} from \"./styles\";\n\nconst KarmaCounter = (props) => {\n  const { userVoteDirection, votesCount, postId, commentId } = props;\n  const [state, dispatch] = useReducer(karmaReducer, {\n    userVoteDirection,\n    votesCount,\n  });\n\n  const upvote = () => {\n    dispatch({ type: \"UPVOTE\" });\n    if (commentId) {\n      voteComment(postId, commentId, userVoteDirection === 1 ? 0 : 1);\n    } else {\n      votePost(postId, userVoteDirection === 1 ? 0 : 1);\n    }\n  };\n  const downvote = () => {\n    dispatch({ type: \"DOWNVOTE\" });\n    if (commentId) {\n      voteComment(postId, commentId, userVoteDirection === -1 ? 0 : -1);\n    } else {\n      votePost(postId, userVoteDirection === -1 ? 0 : -1);\n    }\n  };\n\n  return (\n    <CounterWrapper>\n      <UpvoteButton\n        voted={state.userVoteDirection === 1 ? true : false}\n        onClick={upvote}\n      >\n        +\n      </UpvoteButton>\n      <VotesCount direction={state.userVoteDirection}>\n        {state.votesCount}\n      </VotesCount>\n      <DownvoteButton\n        voted={state.userVoteDirection === -1 ? true : false}\n        onClick={downvote}\n      >\n        -\n      </DownvoteButton>\n    </CounterWrapper>\n  );\n};\n\nexport default KarmaCounter;\n"]},"metadata":{},"sourceType":"module"}