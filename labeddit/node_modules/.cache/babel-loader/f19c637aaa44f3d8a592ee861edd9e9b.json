{"ast":null,"code":"var _jsxFileName = \"/Users/alexandregessone/Desktop/labeddit/mello-4eddit9/labeddit/src/components/FeedPage/index.js\";\nimport React, { useState, useContext } from \"react\";\nimport usePosts from \"../../hooks/usePosts\";\nimport { Helmet } from \"react-helmet-async\";\nimport { languages } from \"../../languages\";\nimport LanguageContext from \"../../contexts/LanguageContext\";\nimport PostForm from \"../PostForm\";\nimport PostCard from \"../PostCard\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport { SortWrapper } from \"./styles\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    height: \"100vh\"\n  }\n}));\n\nconst FeedPage = () => {\n  const [posts, getPosts] = usePosts();\n  const classes = useStyles();\n  const [order, setOrder] = useState(\"created_new\");\n  const [selectedLanguage] = useContext(LanguageContext);\n\n  const handleOrderChange = event => {\n    setOrder(event.target.value);\n  };\n\n  const orderedPosts = posts;\n\n  switch (order) {\n    case \"created_new\":\n      orderedPosts.sort((a, b) => b.createdAt - a.createdAt);\n      break;\n\n    case \"created_old\":\n      orderedPosts.sort((a, b) => a.createdAt - b.createdAt);\n      break;\n\n    case \"votes_more\":\n      orderedPosts.sort((a, b) => b.votesCount - a.votesCount);\n      break;\n\n    case \"votes_less\":\n      orderedPosts.sort((a, b) => a.votesCount - b.votesCount);\n      break;\n\n    default:\n      break;\n  }\n\n  return posts.length > 0 ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Helmet, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"title\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, \"LabEddit\")), /*#__PURE__*/React.createElement(PostForm, {\n    getPosts: getPosts,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(SortWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, languages[selectedLanguage].sortLabel, \" \", /*#__PURE__*/React.createElement(\"select\", {\n    onChange: handleOrderChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"created_new\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }, languages[selectedLanguage].newest), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"created_old\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }, languages[selectedLanguage].oldest), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"votes_more\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }, languages[selectedLanguage].upvotes), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"votes_less\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  }, languages[selectedLanguage].downvotes)))), orderedPosts.map(post => /*#__PURE__*/React.createElement(PostCard, {\n    key: post.id,\n    postId: post.id,\n    userName: post.username,\n    title: post.title,\n    text: post.text,\n    commentsCount: post.commentsCount,\n    votesCount: post.votesCount,\n    userVoteDirection: post.userVoteDirection,\n    createdAt: post.createdAt,\n    feedpage: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }))) : /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CircularProgress, {\n    color: \"secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default FeedPage;","map":{"version":3,"sources":["/Users/alexandregessone/Desktop/labeddit/mello-4eddit9/labeddit/src/components/FeedPage/index.js"],"names":["React","useState","useContext","usePosts","Helmet","languages","LanguageContext","PostForm","PostCard","makeStyles","CircularProgress","SortWrapper","useStyles","theme","root","display","justifyContent","alignItems","height","FeedPage","posts","getPosts","classes","order","setOrder","selectedLanguage","handleOrderChange","event","target","value","orderedPosts","sort","a","b","createdAt","votesCount","length","sortLabel","newest","oldest","upvotes","downvotes","map","post","id","username","title","text","commentsCount","userVoteDirection"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from \"react\";\nimport usePosts from \"../../hooks/usePosts\";\n\nimport { Helmet } from \"react-helmet-async\";\n\nimport { languages } from \"../../languages\";\nimport LanguageContext from \"../../contexts/LanguageContext\";\n\nimport PostForm from \"../PostForm\";\nimport PostCard from \"../PostCard\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nimport { SortWrapper } from \"./styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    height: \"100vh\",\n  },\n}));\n\nconst FeedPage = () => {\n  const [posts, getPosts] = usePosts();\n  const classes = useStyles();\n  const [order, setOrder] = useState(\"created_new\");\n  const [selectedLanguage] = useContext(LanguageContext);\n\n  const handleOrderChange = (event) => {\n    setOrder(event.target.value);\n  };\n\n  const orderedPosts = posts;\n  switch (order) {\n    case \"created_new\":\n      orderedPosts.sort((a, b) => b.createdAt - a.createdAt);\n      break;\n    case \"created_old\":\n      orderedPosts.sort((a, b) => a.createdAt - b.createdAt);\n      break;\n    case \"votes_more\":\n      orderedPosts.sort((a, b) => b.votesCount - a.votesCount);\n      break;\n    case \"votes_less\":\n      orderedPosts.sort((a, b) => a.votesCount - b.votesCount);\n      break;\n    default:\n      break;\n  }\n\n  return posts.length > 0 ? (\n    <div>\n      <Helmet>\n        <title>LabEddit</title>\n      </Helmet>\n\n      <PostForm getPosts={getPosts} />\n      <SortWrapper>\n        <div />\n        <label>\n          {languages[selectedLanguage].sortLabel}{\" \"}\n          <select onChange={handleOrderChange}>\n            <option value=\"created_new\">\n              {languages[selectedLanguage].newest}\n            </option>\n            <option value=\"created_old\">\n              {languages[selectedLanguage].oldest}\n            </option>\n            <option value=\"votes_more\">\n              {languages[selectedLanguage].upvotes}\n            </option>\n            <option value=\"votes_less\">\n              {languages[selectedLanguage].downvotes}\n            </option>\n          </select>\n        </label>\n      </SortWrapper>\n\n      {orderedPosts.map((post) => (\n        <PostCard\n          key={post.id}\n          postId={post.id}\n          userName={post.username}\n          title={post.title}\n          text={post.text}\n          commentsCount={post.commentsCount}\n          votesCount={post.votesCount}\n          userVoteDirection={post.userVoteDirection}\n          createdAt={post.createdAt}\n          feedpage\n        />\n      ))}\n    </div>\n  ) : (\n    <div className={classes.root}>\n      <CircularProgress color=\"secondary\" />\n    </div>\n  );\n};\n\nexport default FeedPage;\n"]},"metadata":{},"sourceType":"module"}