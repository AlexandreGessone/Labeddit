{"ast":null,"code":"var _jsxFileName = \"/Users/alexandregessone/Desktop/labeddit/mello-4eddit9/labeddit/src/components/Header/index.js\";\nimport React, { useContext } from \"react\";\nimport LanguageContext from \"../../contexts/LanguageContext\";\nimport UserContext from \"../../contexts/UserContext\";\nimport { languages } from \"../../languages\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Button from \"@material-ui/core/Button\";\nimport useScrollTrigger from \"@material-ui/core/useScrollTrigger\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Box from \"@material-ui/core/Box\";\nimport { useHistory } from \"react-router-dom\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  title: {\n    flexGrow: 1\n  },\n  color: {\n    background: \"#f2f2f2\"\n  }\n}));\n\nfunction ElevationScroll(props) {\n  const {\n    children,\n    window\n  } = props;\n  const trigger = useScrollTrigger({\n    disableHysteresis: true,\n    threshold: 0,\n    target: window ? window() : undefined\n  });\n  return React.cloneElement(children, {\n    elevation: trigger ? 4 : 0\n  });\n}\n\nconst Header = props => {\n  const [selectedLanguage, setLanguage] = useContext(LanguageContext);\n  const {\n    userData,\n    setUserData\n  } = useContext(UserContext);\n  const classes = useStyles();\n  const history = useHistory();\n\n  const handleLanguageSelect = event => {\n    localStorage.setItem(\"language\", event.target.value);\n    setLanguage(event.target.value);\n  };\n\n  const handleLogout = () => {\n    localStorage.removeItem(\"labeddit\");\n    setUserData();\n    history.push(\"/login\");\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ElevationScroll, Object.assign({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(AppBar, {\n    className: classes.color,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Toolbar, {\n    style: {\n      display: \"flex\",\n      justifyContent: \"space-between\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    maxWidth: \"sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    color: \"secondary\",\n    variant: \"h6\",\n    className: classes.title,\n    onClick: () => history.push(\"/posts\"),\n    style: {\n      cursor: \"pointer\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }\n  }, \"LabEddit\"))), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: \"flex\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }\n  }, userData && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      color: \"black\",\n      marginRight: \"10px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 19\n    }\n  }, `${languages[selectedLanguage].welcome} ${userData.user.username}!`), /*#__PURE__*/React.createElement(Button, {\n    onClick: handleLogout,\n    style: {\n      marginRight: \"10px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 19\n    }\n  }, languages[selectedLanguage].logoutLabel)), /*#__PURE__*/React.createElement(\"select\", {\n    value: selectedLanguage,\n    onChange: handleLanguageSelect,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"pt\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 17\n    }\n  }, \"\\uD83C\\uDDE7\\uD83C\\uDDF7\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"en\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 17\n    }\n  }, \"\\uD83C\\uDDFA\\uD83C\\uDDF8\")))))), /*#__PURE__*/React.createElement(Toolbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default Header;","map":{"version":3,"sources":["/Users/alexandregessone/Desktop/labeddit/mello-4eddit9/labeddit/src/components/Header/index.js"],"names":["React","useContext","LanguageContext","UserContext","languages","makeStyles","AppBar","Toolbar","Button","useScrollTrigger","Typography","Box","useHistory","useStyles","theme","root","flexGrow","title","color","background","ElevationScroll","props","children","window","trigger","disableHysteresis","threshold","target","undefined","cloneElement","elevation","Header","selectedLanguage","setLanguage","userData","setUserData","classes","history","handleLanguageSelect","event","localStorage","setItem","value","handleLogout","removeItem","push","display","justifyContent","cursor","marginRight","welcome","user","username","logoutLabel"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AAEA,OAAOC,eAAP,MAA4B,gCAA5B;AACA,OAAOC,WAAP,MAAwB,4BAAxB;AACA,SAASC,SAAT,QAA0B,iBAA1B;AAEA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,GAAP,MAAgB,uBAAhB;AAEA,SAASC,UAAT,QAA2B,kBAA3B;AAEA,MAAMC,SAAS,GAAGR,UAAU,CAAES,KAAD,KAAY;AACvCC,EAAAA,IAAI,EAAE;AACJC,IAAAA,QAAQ,EAAE;AADN,GADiC;AAIvCC,EAAAA,KAAK,EAAE;AACLD,IAAAA,QAAQ,EAAE;AADL,GAJgC;AAOvCE,EAAAA,KAAK,EAAE;AACLC,IAAAA,UAAU,EAAE;AADP;AAPgC,CAAZ,CAAD,CAA5B;;AAYA,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAC9B,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAAuBF,KAA7B;AAEA,QAAMG,OAAO,GAAGf,gBAAgB,CAAC;AAC/BgB,IAAAA,iBAAiB,EAAE,IADY;AAE/BC,IAAAA,SAAS,EAAE,CAFoB;AAG/BC,IAAAA,MAAM,EAAEJ,MAAM,GAAGA,MAAM,EAAT,GAAcK;AAHG,GAAD,CAAhC;AAMA,SAAO5B,KAAK,CAAC6B,YAAN,CAAmBP,QAAnB,EAA6B;AAClCQ,IAAAA,SAAS,EAAEN,OAAO,GAAG,CAAH,GAAO;AADS,GAA7B,CAAP;AAGD;;AAED,MAAMO,MAAM,GAAIV,KAAD,IAAW;AACxB,QAAM,CAACW,gBAAD,EAAmBC,WAAnB,IAAkChC,UAAU,CAACC,eAAD,CAAlD;AACA,QAAM;AAAEgC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAA4BlC,UAAU,CAACE,WAAD,CAA5C;AACA,QAAMiC,OAAO,GAAGvB,SAAS,EAAzB;AACA,QAAMwB,OAAO,GAAGzB,UAAU,EAA1B;;AAEA,QAAM0B,oBAAoB,GAAIC,KAAD,IAAW;AACtCC,IAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCF,KAAK,CAACZ,MAAN,CAAae,KAA9C;AACAT,IAAAA,WAAW,CAACM,KAAK,CAACZ,MAAN,CAAae,KAAd,CAAX;AACD,GAHD;;AAKA,QAAMC,YAAY,GAAG,MAAM;AACzBH,IAAAA,YAAY,CAACI,UAAb,CAAwB,UAAxB;AACAT,IAAAA,WAAW;AACXE,IAAAA,OAAO,CAACQ,IAAR,CAAa,QAAb;AACD,GAJD;;AAMA,sBACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,eAAD,oBAAqBxB,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACE,oBAAC,MAAD;AAAQ,IAAA,SAAS,EAAEe,OAAO,CAAClB,KAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,OAAD;AACE,IAAA,KAAK,EAAE;AACL4B,MAAAA,OAAO,EAAE,MADJ;AAELC,MAAAA,cAAc,EAAE;AAFX,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AAAK,IAAA,QAAQ,EAAE,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AACE,IAAA,KAAK,EAAC,WADR;AAEE,IAAA,OAAO,EAAC,IAFV;AAGE,IAAA,SAAS,EAAEX,OAAO,CAACnB,KAHrB;AAIE,IAAA,OAAO,EAAE,MAAMoB,OAAO,CAACQ,IAAR,CAAa,QAAb,CAJjB;AAKE,IAAA,KAAK,EAAE;AAAEG,MAAAA,MAAM,EAAE;AAAV,KALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,CADF,CANF,eAmBE;AAAK,IAAA,KAAK,EAAE;AAAEF,MAAAA,OAAO,EAAE;AAAX,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGZ,QAAQ,iBACP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAM,IAAA,KAAK,EAAE;AAAEhB,MAAAA,KAAK,EAAE,OAAT;AAAkB+B,MAAAA,WAAW,EAAE;AAA/B,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,GAAE7C,SAAS,CAAC4B,gBAAD,CAAT,CAA4BkB,OAAQ,IAAGhB,QAAQ,CAACiB,IAAT,CAAcC,QAAS,GADpE,CADF,eAIE,oBAAC,MAAD;AACE,IAAA,OAAO,EAAET,YADX;AAEE,IAAA,KAAK,EAAE;AAAEM,MAAAA,WAAW,EAAE;AAAf,KAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIG7C,SAAS,CAAC4B,gBAAD,CAAT,CAA4BqB,WAJ/B,CAJF,CAFJ,eAcE;AAAQ,IAAA,KAAK,EAAErB,gBAAf;AAAiC,IAAA,QAAQ,EAAEM,oBAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAQ,IAAA,KAAK,EAAE,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCADF,eAEE;AAAQ,IAAA,KAAK,EAAE,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAFF,CAdF,CAnBF,CADF,CADF,CADF,eA4CE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA5CF,CADF;AAgDD,CAjED;;AAmEA,eAAeP,MAAf","sourcesContent":["import React, { useContext } from \"react\";\n\nimport LanguageContext from \"../../contexts/LanguageContext\";\nimport UserContext from \"../../contexts/UserContext\";\nimport { languages } from \"../../languages\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Button from \"@material-ui/core/Button\";\nimport useScrollTrigger from \"@material-ui/core/useScrollTrigger\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Box from \"@material-ui/core/Box\";\n\nimport { useHistory } from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  title: {\n    flexGrow: 1,\n  },\n  color: {\n    background: \"#f2f2f2\",\n  },\n}));\n\nfunction ElevationScroll(props) {\n  const { children, window } = props;\n\n  const trigger = useScrollTrigger({\n    disableHysteresis: true,\n    threshold: 0,\n    target: window ? window() : undefined,\n  });\n\n  return React.cloneElement(children, {\n    elevation: trigger ? 4 : 0,\n  });\n}\n\nconst Header = (props) => {\n  const [selectedLanguage, setLanguage] = useContext(LanguageContext);\n  const { userData, setUserData } = useContext(UserContext);\n  const classes = useStyles();\n  const history = useHistory();\n\n  const handleLanguageSelect = (event) => {\n    localStorage.setItem(\"language\", event.target.value);\n    setLanguage(event.target.value);\n  };\n\n  const handleLogout = () => {\n    localStorage.removeItem(\"labeddit\");\n    setUserData();\n    history.push(\"/login\");\n  };\n\n  return (\n    <React.Fragment>\n      <ElevationScroll {...props}>\n        <AppBar className={classes.color}>\n          <Toolbar\n            style={{\n              display: \"flex\",\n              justifyContent: \"space-between\",\n            }}\n          >\n            <div>\n              <Box maxWidth={\"sm\"}>\n                <Typography\n                  color=\"secondary\"\n                  variant=\"h6\"\n                  className={classes.title}\n                  onClick={() => history.push(\"/posts\")}\n                  style={{ cursor: \"pointer\" }}\n                >\n                  LabEddit\n                </Typography>\n              </Box>\n            </div>\n            <div style={{ display: \"flex\" }}>\n              {userData && (\n                <div>\n                  <span style={{ color: \"black\", marginRight: \"10px\" }}>\n                    {`${languages[selectedLanguage].welcome} ${userData.user.username}!`}\n                  </span>\n                  <Button\n                    onClick={handleLogout}\n                    style={{ marginRight: \"10px\" }}\n                  >\n                    {languages[selectedLanguage].logoutLabel}\n                  </Button>\n                </div>\n              )}\n              <select value={selectedLanguage} onChange={handleLanguageSelect}>\n                <option value={\"pt\"}>🇧🇷</option>\n                <option value={\"en\"}>🇺🇸</option>\n              </select>\n            </div>\n          </Toolbar>\n        </AppBar>\n      </ElevationScroll>\n      <Toolbar />\n    </React.Fragment>\n  );\n};\n\nexport default Header;\n"]},"metadata":{},"sourceType":"module"}