{"ast":null,"code":"var _jsxFileName = \"/Users/alexandregessone/Desktop/labeddit/mello-4eddit9/labeddit/src/components/SignupPage/index.js\";\nimport React, { useContext } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport useForm from \"../../hooks/useForm\";\nimport { Helmet } from \"react-helmet-async\";\nimport { languages } from \"../../languages\";\nimport LanguageContext from \"../../contexts/LanguageContext\";\nimport { signup } from \"../../functions/axios\";\nimport Button from \"@material-ui/core/Button\";\nimport Container from \"@material-ui/core/Container\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Avatar from '@material-ui/core/Avatar';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst SignupPage = () => {\n  const history = useHistory();\n  const [selectedLanguage] = useContext(LanguageContext);\n  const [form, handleFormChange] = useForm({\n    email: \"\",\n    password: \"\",\n    username: \"\"\n  });\n\n  const handleFormSubmit = async event => {\n    event.preventDefault();\n    const response = await signup(form);\n\n    if (response.token) {\n      localStorage.setItem(\"labeddit\", JSON.stringify(response));\n      history.push(\"/posts\");\n    } else {\n      window.alert(response.message);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Container, {\n    component: \"main\",\n    maxWidth: \"xs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Helmet, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"title\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }, languages[selectedLanguage].signupLabel)), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleFormSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    id: \"outlined-basic\",\n    variant: \"outlined\",\n    type: \"text\",\n    name: \"username\",\n    placeholder: languages[selectedLanguage].usernameLabel,\n    onChange: handleFormChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    id: \"outlined-basic\",\n    variant: \"outlined\",\n    type: \"email\",\n    name: \"email\",\n    placeholder: languages[selectedLanguage].emailLabel,\n    onChange: handleFormChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    id: \"outlined-basic\",\n    variant: \"outlined\",\n    type: \"password\",\n    name: \"password\",\n    placeholder: languages[selectedLanguage].passwordLabel,\n    onChange: handleFormChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }\n  }, languages[selectedLanguage].signupLabel)));\n};\n\nexport default SignupPage;","map":{"version":3,"sources":["/Users/alexandregessone/Desktop/labeddit/mello-4eddit9/labeddit/src/components/SignupPage/index.js"],"names":["React","useContext","useHistory","useForm","Helmet","languages","LanguageContext","signup","Button","Container","TextField","Avatar","CssBaseline","FormControlLabel","Checkbox","Link","Grid","Box","LockOutlinedIcon","Typography","makeStyles","SignupPage","history","selectedLanguage","form","handleFormChange","email","password","username","handleFormSubmit","event","preventDefault","response","token","localStorage","setItem","JSON","stringify","push","window","alert","message","signupLabel","usernameLabel","emailLabel","passwordLabel"],"mappings":"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","sourcesContent":["import React, { useContext } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport useForm from \"../../hooks/useForm\";\n\nimport { Helmet } from \"react-helmet-async\";\n\nimport { languages } from \"../../languages\";\nimport LanguageContext from \"../../contexts/LanguageContext\";\n\nimport { signup } from \"../../functions/axios\";\n\nimport Button from \"@material-ui/core/Button\";\nimport Container from \"@material-ui/core/Container\";\nimport TextField from \"@material-ui/core/TextField\";\n\n\nimport Avatar from '@material-ui/core/Avatar';\n\nimport CssBaseline from '@material-ui/core/CssBaseline';\n\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst SignupPage = () => {\n\n  const history = useHistory();\n  const [selectedLanguage] = useContext(LanguageContext);\n\n  const [form, handleFormChange] = useForm({\n    email: \"\",\n    password: \"\",\n    username: \"\",\n  });\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    const response = await signup(form);\n    if (response.token) {\n      localStorage.setItem(\"labeddit\", JSON.stringify(response));\n      history.push(\"/posts\");\n    } else {\n      window.alert(response.message);\n    }\n  };\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <Helmet>\n        <title>{languages[selectedLanguage].signupLabel}</title>\n      </Helmet>\n      <form onSubmit={handleFormSubmit}>\n        <TextField\n          id=\"outlined-basic\"\n          variant=\"outlined\"\n          type=\"text\"\n          name=\"username\"\n          placeholder={languages[selectedLanguage].usernameLabel}\n          onChange={handleFormChange}\n        />\n        <TextField\n          id=\"outlined-basic\"\n          variant=\"outlined\"\n          type=\"email\"\n          name=\"email\"\n          placeholder={languages[selectedLanguage].emailLabel}\n          onChange={handleFormChange}\n        />\n        <TextField\n          id=\"outlined-basic\"\n          variant=\"outlined\"\n          type=\"password\"\n          name=\"password\"\n          placeholder={languages[selectedLanguage].passwordLabel}\n          onChange={handleFormChange}\n        />\n        <Button variant=\"contained\">\n          {languages[selectedLanguage].signupLabel}\n        </Button>\n      </form>\n    </Container>\n  );\n};\n\nexport default SignupPage;\n"]},"metadata":{},"sourceType":"module"}