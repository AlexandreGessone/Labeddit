{"ast":null,"code":"var _jsxFileName = \"/Users/alexandregessone/Desktop/labeddit/mello-4eddit9/labeddit/src/components/FeedPage/index.js\";\nimport React from \"react\";\nimport usePosts from \"../../hooks/usePosts\";\nimport { Helmet } from \"react-helmet-async\";\nimport PostCard from \"../PostCard\";\nimport styled from 'styled-components';\nimport TextField from \"@material-ui/core/TextField\";\nimport Container from \"@material-ui/core/Container\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\n\nconst FeedPage = () => {\n  const FormContainer = styled.form`\n    display: grid;\n    justify-items: center;\n    margin-top: 20px;\n    \n`;\n  const [posts] = usePosts();\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleFormSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FormContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    id: \"outlined-basic\",\n    variant: \"outlined\",\n    placeholder: \"Escrever post\",\n    type: \"text\",\n    name: \"text\",\n    onChange: handleFormChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    id: \"outlined-basic\",\n    variant: \"outlined\",\n    placeholder: \"T\\xEDtulo\",\n    type: \"text\",\n    name: \"title\",\n    onChange: handleFormChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    type: \"submit\",\n    onClick: handlePostClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 15\n    }\n  }, \"Postar\")))), /*#__PURE__*/React.createElement(Helmet, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"title\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, \"LabEddit\")), posts.map(post => /*#__PURE__*/React.createElement(PostCard, {\n    key: post.id,\n    postId: post.id,\n    userName: post.username,\n    title: post.title,\n    text: post.text,\n    commentsCount: post.commentsCount,\n    votesCount: post.votesCount,\n    userVoteDirection: post.userVoteDirection,\n    feedpage: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default FeedPage;","map":{"version":3,"sources":["/Users/alexandregessone/Desktop/labeddit/mello-4eddit9/labeddit/src/components/FeedPage/index.js"],"names":["React","usePosts","Helmet","PostCard","styled","TextField","Container","makeStyles","Button","FeedPage","FormContainer","form","posts","handleFormSubmit","handleFormChange","handlePostClick","map","post","id","username","title","text","commentsCount","votesCount","userVoteDirection"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,SAASC,MAAT,QAAuB,oBAAvB;AACA,OAAOC,QAAP,MAAqB,aAArB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,MAAP,MAAmB,0BAAnB;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AACrB,QAAMC,aAAa,GAAGN,MAAM,CAACO,IAAK;;;;;CAAlC;AAMA,QAAM,CAACC,KAAD,IAAUX,QAAQ,EAAxB;AAEA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEE;AAAM,IAAA,QAAQ,EAAEY,gBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AAAW,IAAA,EAAE,EAAC,gBAAd;AAA+B,IAAA,OAAO,EAAC,UAAvC;AACA,IAAA,WAAW,EAAC,eADZ;AAEA,IAAA,IAAI,EAAC,MAFL;AAGA,IAAA,IAAI,EAAC,MAHL;AAIA,IAAA,QAAQ,EAAEC,gBAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,eAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AAAW,IAAA,EAAE,EAAC,gBAAd;AAA+B,IAAA,OAAO,EAAC,UAAvC;AACA,IAAA,WAAW,EAAC,WADZ;AAEA,IAAA,IAAI,EAAC,MAFL;AAGA,IAAA,IAAI,EAAC,OAHL;AAIA,IAAA,QAAQ,EAAEA,gBAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAVF,eAmBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,WAAhB;AAA4B,IAAA,IAAI,EAAC,QAAjC;AAA0C,IAAA,OAAO,EAAEC,eAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,CAnBF,CADJ,CAFF,eA+BE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,CA/BF,EAkCGH,KAAK,CAACI,GAAN,CAAWC,IAAD,iBACT,oBAAC,QAAD;AACE,IAAA,GAAG,EAAEA,IAAI,CAACC,EADZ;AAEE,IAAA,MAAM,EAAED,IAAI,CAACC,EAFf;AAGE,IAAA,QAAQ,EAAED,IAAI,CAACE,QAHjB;AAIE,IAAA,KAAK,EAAEF,IAAI,CAACG,KAJd;AAKE,IAAA,IAAI,EAAEH,IAAI,CAACI,IALb;AAME,IAAA,aAAa,EAAEJ,IAAI,CAACK,aANtB;AAOE,IAAA,UAAU,EAAEL,IAAI,CAACM,UAPnB;AAQE,IAAA,iBAAiB,EAAEN,IAAI,CAACO,iBAR1B;AASE,IAAA,QAAQ,MATV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CAlCH,CADF;AAkDD,CA3DD;;AA6DA,eAAef,QAAf","sourcesContent":["import React from \"react\";\nimport usePosts from \"../../hooks/usePosts\";\nimport { Helmet } from \"react-helmet-async\";\nimport PostCard from \"../PostCard\";\nimport styled from 'styled-components';\nimport TextField from \"@material-ui/core/TextField\";\nimport Container from \"@material-ui/core/Container\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\n\nconst FeedPage = () => {\n  const FormContainer = styled.form`\n    display: grid;\n    justify-items: center;\n    margin-top: 20px;\n    \n`\n  const [posts] = usePosts();\n\n  return (\n    <div>\n\n      <form onSubmit={handleFormSubmit}>\n          <FormContainer>\n            <p>\n              <TextField id=\"outlined-basic\" variant=\"outlined\"\n              placeholder=\"Escrever post\"\n              type=\"text\"\n              name=\"text\"\n              onChange={handleFormChange}\n              />\n            </p>\n            \n            <p>\n              <TextField id=\"outlined-basic\" variant=\"outlined\"\n              placeholder=\"TÃ­tulo\"\n              type=\"text\"\n              name=\"title\"\n              onChange={handleFormChange}\n              />\n            </p>\n            \n            <p>\n              <Button variant=\"contained\" type=\"submit\" onClick={handlePostClick}>Postar</Button>\n            </p>\n          </FormContainer>\n          \n      </form>\n\n      \n\n      <Helmet>\n        <title>LabEddit</title>\n      </Helmet>\n      {posts.map((post) => (\n        <PostCard\n          key={post.id}\n          postId={post.id}\n          userName={post.username}\n          title={post.title}\n          text={post.text}\n          commentsCount={post.commentsCount}\n          votesCount={post.votesCount}\n          userVoteDirection={post.userVoteDirection}\n          feedpage\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default FeedPage;\n"]},"metadata":{},"sourceType":"module"}